{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport ListItem from '../components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  let {\n    authTokens\n  } = useContext(AuthContext);\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    let data = await response.json();\n    setNote(data);\n  };\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else {\n    var _note$;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (_note$ = note[0]) === null || _note$ === void 0 ? void 0 : _note$.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(NotePage, \"DPMjhZwTtLF6zmXkrpfam4l85Eg=\");\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js"],"names":["React","useState","useEffect","useContext","AuthContext","ListItem","NotePage","match","authTokens","noteId","params","id","note","setNote","getNote","response","fetch","headers","String","access","data","json","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAE5B,MAAI;AAACC,IAAAA;AAAD,MAAeL,UAAU,CAACC,WAAD,CAA7B;AACA,MAAIK,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAA9B;;AAEA,MAAIa,OAAO,GAAG,YAAW;AACrB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBP,MAAO,GAA1B,EAA8B;AACpDQ,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,YAAYC,MAAM,CAACV,UAAU,CAACW,MAAZ;AAF/B;AAD2C,KAA9B,CAA1B;AAOA,QAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAR,IAAAA,OAAO,CAACO,IAAD,CAAP;AACH,GAVD;;AAaAlB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;;AAIA,MAAG,CAACG,IAAJ,EAAS;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH,GAJD,MAKI;AAAA;;AACA,wBACI;AAAA,6BACI;AAAA,4BACKA,IAAI,CAAC,CAAD,CADT,2CACK,OAASU;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;AAEJ,CAvCD;;GAAMhB,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport ListItem from '../components/ListItem';\n\nconst NotePage = ({ match }) => {\n    \n    let {authTokens} = useContext(AuthContext)\n    let noteId = match.params.id\n    let [note, setNote] = useState(null)\n\n    let getNote = async ()=> {\n        let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + String(authTokens.access)\n\n            }\n        })\n        let data = await response.json()\n        setNote(data)\n    }\n    \n\n    useEffect(()=>{\n        getNote()\n    }, [noteId])\n\n    if(!note){\n        return <div>\n            {/* {alert('One Second fetching your Note!')} */}\n        </div>\n    }\n    else{\n        return(\n            <div>\n                <h1>\n                    {note[0]?.body}\n                </h1>\n\n            </div>\n        )\n    }\n    \n};\n\nexport default NotePage;\n"]},"metadata":{},"sourceType":"module"}
