{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/utils/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  // console.log(\"private\")\n  let {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: !user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 35\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"JGtbL9nF23m+KDtp3kj55mw9GTc=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","useContext","AuthContext","PrivateRoute","children","rest","user"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAGA,MAAMC,YAAY,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA,QAAD;AAAW,OAAGC;AAAd,GAAwB;AAC1C;AACA,MAAI;AAACC,IAAAA;AAAD,MAASL,UAAU,CAACC,WAAD,CAAvB;AACA,sBACI,QAAC,KAAD,OAAWG,IAAX;AAAA,cAAkB,CAACC,IAAD,gBAAQ,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAR,GAAmCF;AAArD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAND;;GAAMD,Y;;KAAAA,Y;AAQN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\n\n\nconst PrivateRoute = ({children, ...rest}) => {\n    // console.log(\"private\")\n    let {user} = useContext(AuthContext)\n    return(\n        <Route {...rest}>{!user ? <Redirect to=\"/login\" /> : children}</Route>\n    )\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}