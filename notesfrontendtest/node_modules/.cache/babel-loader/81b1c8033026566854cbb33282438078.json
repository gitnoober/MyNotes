{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  let [notes, setNotes] = useState([]);\n  let {\n    authTokens\n  } = useContext(AuthContext);\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.acess)\n      }\n    });\n\n    if (response.status === 200) {\n      let data = response.json();\n      setNotes(data);\n      console.log(data);\n    } else {\n      console.log(\"error while fetching notes\", String(authTokens.access));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are looged to the home page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: note.body\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"yGaPL5atlURfHi7vTg1overFn2I=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/pages/HomePage.js"],"names":["React","useState","useEffect","useContext","AuthContext","HomePage","notes","setNotes","authTokens","getNotes","response","fetch","method","headers","String","acess","status","data","json","console","log","access","map","note","body","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI;AAACO,IAAAA;AAAD,MAAeL,UAAU,CAACC,WAAD,CAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,QAAQ,GAAG,YAAW;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC7DC,MAAAA,MAAM,EAAC,KADsD;AAE7DC,MAAAA,OAAO,EAAC;AACN,wBAAiB,kBADX;AAEN,yBAAkB,YAAYC,MAAM,CAACN,UAAU,CAACO,KAAZ;AAF9B;AAFqD,KAArC,CAA1B;;AAOA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,UAAIC,IAAI,GAAGP,QAAQ,CAACQ,IAAT,EAAX;AACAX,MAAAA,QAAQ,CAACU,IAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAJD,MAIK;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,MAAM,CAACN,UAAU,CAACa,MAAZ,CAAhD;AACD;AACF,GAfD;;AAkBA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACGf,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACb;AAAA,kBACGA,IAAI,CAACC;AADR,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtCD;;GAAMpB,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport AuthContext from '../context/AuthContext';\n\nconst HomePage = () => {\n\n  let [notes, setNotes] = useState([])\n  let {authTokens} = useContext(AuthContext)\n\n  useEffect(()=>{\n    getNotes()\n  }, [])\n\n  let getNotes = async() => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/', {\n      method:'GET',\n      headers:{\n        'Content-Type' : 'application/json',\n        'Authorization' : 'Bearer ' + String(authTokens.acess)\n      }\n    })\n    if (response.status === 200){\n      let data = response.json()\n      setNotes(data)\n      console.log(data)\n    }else{\n      console.log(\"error while fetching notes\", String(authTokens.access))\n    }\n  }\n\n\n  return (\n    <div>\n        <p>You are looged to the home page</p>\n        <ul>\n          {notes.map(note => (\n            <li key={note.id}>\n              {note.body}\n            </li>\n          ))}\n        </ul>\n    </div>);\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
