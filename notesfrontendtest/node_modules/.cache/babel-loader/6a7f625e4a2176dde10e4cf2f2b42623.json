{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  localStorage.getItem('authTokens');\n  let [authTokens, setauthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n  const history = useHistory();\n\n  let loginUser = async e => {\n    e.preventDefault(); // console.log('Form submitted')\n\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n\n    if (response.ok) {\n      let data = await response.json();\n      setauthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data)); // console.log('data:', data)\n      // console.log(\"response:\" , response);\n\n      console.log(\"userrr\", user);\n    } else {\n      console.log('Alert Something went wrong ://', response);\n    } // console.log('data:', response)\n\n  };\n\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"MB0tNMxv5EDAmVo2OCevKY4LOJU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","useHistory","AuthContext","AuthProvider","children","localStorage","getItem","authTokens","setauthTokens","user","setUser","history","loginUser","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","username","value","password","ok","data","json","access","setItem","console","log","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,eAAeK,WAAf;AAGA,OAAO,MAAMC,YAAY,GAAE,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEvCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAMa,OAAO,GAAGV,UAAU,EAA1B;;AAEA,MAAIW,SAAS,GAAG,MAAOC,CAAP,IAAa;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC3DC,MAAAA,MAAM,EAAG,MADkD;AAE3DC,MAAAA,OAAO,EAAG;AACN,wBAAe;AADT,OAFiD;AAK3DC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,oBAAWR,CAAC,CAACS,MAAF,CAASC,QAAT,CAAkBC,KAA9B;AAAqC,oBAAWX,CAAC,CAACS,MAAF,CAASG,QAAT,CAAkBD;AAAlE,OAAf;AALoD,KAArC,CAA1B;;AAQA,QAAIT,QAAQ,CAACW,EAAb,EAAgB;AACZ,UAAIC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAjB;AACApB,MAAAA,aAAa,CAACmB,IAAD,CAAb;AACAjB,MAAAA,OAAO,CAACV,UAAU,CAAC2B,IAAI,CAACE,MAAN,CAAX,CAAP;AACAxB,MAAAA,YAAY,CAACyB,OAAb,CAAqB,YAArB,EAAkCV,IAAI,CAACC,SAAL,CAAeM,IAAf,CAAlC,EAJY,CAKZ;AACA;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBvB,IAAtB;AACH,KARD,MAQO;AACHsB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CjB,QAA7C;AACH,KArBwB,CAsBzB;;AACH,GAvBD;;AAyBA,MAAIkB,WAAW,GAAG;AACdxB,IAAAA,IAAI,EAACA,IADS;AAEdG,IAAAA,SAAS,EAACA;AAFI,GAAlB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,WAA7B;AAAA,cACK7B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CM;;GAAMD,Y;UAMOF,U;;;KANPE,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider =({children}) => {\n\n    localStorage.getItem('authTokens')\n    let [authTokens, setauthTokens] = useState(null)\n    let [user, setUser] = useState(null)\n\n    const history = useHistory()\n\n    let loginUser = async (e) => {\n        e.preventDefault()\n        // console.log('Form submitted')\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\n            method : 'POST',\n            headers : {\n                'Content-Type':'application/json'\n            },\n            body : JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n\n        })\n        if (response.ok){\n            let data = await response.json()\n            setauthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens',JSON.stringify(data))\n            // console.log('data:', data)\n            // console.log(\"response:\" , response);\n            console.log(\"userrr\", user)\n        } else {\n            console.log('Alert Something went wrong ://',response)\n        }\n        // console.log('data:', response)\n    }\n\n    let contextData = {\n        user:user,\n        loginUser:loginUser\n    }\n\n    return (\n        <AuthContext.Provider value={contextData} >\n            {children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}
