{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  let {\n    authTokens\n  } = useContext(AuthContext);\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    let data = await response.json();\n    setNote(data);\n  };\n\n  let updateNote = async () => {\n    let response = fetch(`/api/notes/${noteId}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      },\n      body: JSON.stringify(note)\n    });\n    let data = await response.json();\n    setNote(data);\n  };\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let handleSubmit = () => {\n    updateNote();\n    history.push('/');\n  }; // useEffect(()=>{\n  //     updateNote()\n  // }, [noteId])\n\n\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  } else {\n    var _note$;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: updateNote,\n        updateNote: true,\n        children: (_note$ = note[0]) === null || _note$ === void 0 ? void 0 : _note$.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(NotePage, \"DPMjhZwTtLF6zmXkrpfam4l85Eg=\");\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js"],"names":["React","useState","useEffect","useContext","AuthContext","ReactComponent","ArrowLeft","Link","NotePage","match","history","authTokens","noteId","params","id","note","setNote","getNote","response","fetch","headers","String","access","data","json","updateNote","method","body","JSON","stringify","handleSubmit","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,0BAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,QAAQ,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AAErC,MAAI;AAACC,IAAAA;AAAD,MAAeR,UAAU,CAACC,WAAD,CAA7B;AACA,MAAIQ,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA1B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAA9B;;AAEA,MAAIgB,OAAO,GAAG,YAAW;AACrB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBP,MAAO,GAA1B,EAA8B;AACpDQ,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,YAAYC,MAAM,CAACV,UAAU,CAACW,MAAZ;AAF/B;AAD2C,KAA9B,CAA1B;AAOA,QAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAR,IAAAA,OAAO,CAACO,IAAD,CAAP;AACH,GAVD;;AAaA,MAAIE,UAAU,GAAG,YAAW;AACxB,QAAIP,QAAQ,GAAGC,KAAK,CAAE,cAAaP,MAAO,UAAtB,EAAgC;AAChDc,MAAAA,MAAM,EAAG,KADuC;AAEhDN,MAAAA,OAAO,EAAE;AACL,wBAAiB,kBADZ;AAEL,yBAAkB,YAAYC,MAAM,CAACV,UAAU,CAACW,MAAZ;AAF/B,OAFuC;AAMhDK,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAed,IAAf;AAN2C,KAAhC,CAApB;AAQA,QAAIQ,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAR,IAAAA,OAAO,CAACO,IAAD,CAAP;AACH,GAXD;;AAaArB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;;AAKA,MAAIkB,YAAY,GAAG,MAAI;AACnBL,IAAAA,UAAU;AACVf,IAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AAEH,GAJD,CArCqC,CA2CrC;AACA;AACA;;;AAEA,MAAG,CAAChB,IAAJ,EAAS;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,GAHD,MAII;AAAA;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEe;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAU,QAAA,QAAQ,EAAEL,UAApB;AAAgC,QAAA,UAAU,MAA1C;AAAA,4BACKV,IAAI,CAAC,CAAD,CADT,2CACK,OAASY;AADd;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;AAEJ,CArED;;GAAMnB,Q;;KAAAA,Q;AAuEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom';\n\n\nconst NotePage = ({ match, history }) => {\n    \n    let {authTokens} = useContext(AuthContext)\n    let noteId = match.params.id\n    let [note, setNote] = useState(null)\n\n    let getNote = async ()=> {\n        let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + String(authTokens.access)\n\n            }\n        })\n        let data = await response.json()\n        setNote(data)\n    }\n    \n\n    let updateNote = async ()=> {\n        let response = fetch(`/api/notes/${noteId}/update/`,{\n            method : 'PUT',\n            headers: {\n                'Content-Type' : 'application/json',\n                'Authorization' : 'Bearer ' + String(authTokens.access)\n            },\n            body:JSON.stringify(note)\n        })\n        let data = await response.json()\n        setNote(data)\n    }\n\n    useEffect(()=>{\n        getNote()\n    }, [noteId])\n\n\n    let handleSubmit = ()=>{\n        updateNote()\n        history.push('/')\n\n    }\n\n    // useEffect(()=>{\n    //     updateNote()\n    // }, [noteId])\n\n    if(!note){\n        return <div>\n        </div>\n    }\n    else{\n        return(\n            <div className='note'>\n                <div className='note-header'>\n                    <h3>\n                        <ArrowLeft onClick={handleSubmit} />\n                    </h3>\n                </div>\n                {/* <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})} } defaultValue={note[0].body}>\n                </textarea> */}\n                <textarea onChange={updateNote} updateNote>\n                    {note[0]?.body}\n                </textarea>\n\n            </div>\n        )\n    }\n    \n};\n\nexport default NotePage;\n"]},"metadata":{},"sourceType":"module"}