{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notestest/notesfrontendtest/src/components/ListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet getTime = note => {\n  return new Date(note.updated_on).toLocaleDateString();\n};\n\nlet getTitle = note => {\n  let title = note.body.split('\\n')[0];\n\n  if (title.length > 45) {\n    return title.slice(0, 45);\n  }\n\n  return title;\n};\n\nlet getContent = note => {\n  let title = getTitle(note);\n  let content = note.body.replaceAll('\\n', ' ');\n  content = content.replaceAll(title, '');\n\n  if (content.length > 45) {\n    return content.slice(0, 45) + '...';\n  } else {\n    return content;\n  }\n};\n\nconst ListItem = _ref => {\n  let {\n    note\n  } = _ref;\n  console.log(note, \"list item wala\");\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/note/${note.id}/`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getTitle(note)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime(note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this), getContent(note)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/ps/Documents/notestest/notesfrontendtest/src/components/ListItem.js"],"names":["React","Link","getTime","note","Date","updated_on","toLocaleDateString","getTitle","title","body","split","length","slice","getContent","content","replaceAll","ListItem","console","log","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAIA,IAAIC,OAAO,GAAIC,IAAD,IAAU;AACtB,SAAO,IAAIC,IAAJ,CAASD,IAAI,CAACE,UAAd,EAA0BC,kBAA1B,EAAP;AACD,CAFD;;AAIA,IAAIC,QAAQ,GAAIJ,IAAD,IAAU;AACvB,MAAIK,KAAK,GAAGL,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAZ;;AACA,MAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAsB;AACpB,WAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAc,EAAd,CAAP;AACD;;AACD,SAAOJ,KAAP;AACD,CAND;;AAQA,IAAIK,UAAU,GAAIV,IAAD,IAAU;AACzB,MAAIK,KAAK,GAAGD,QAAQ,CAACJ,IAAD,CAApB;AACA,MAAIW,OAAO,GAAGX,IAAI,CAACM,IAAL,CAAUM,UAAV,CAAqB,IAArB,EAA2B,GAA3B,CAAd;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,UAAR,CAAmBP,KAAnB,EAA0B,EAA1B,CAAV;;AAEA,MAAIM,OAAO,CAACH,MAAR,GAAiB,EAArB,EAAwB;AACtB,WAAOG,OAAO,CAACF,KAAR,CAAc,CAAd,EAAgB,EAAhB,IAAsB,KAA7B;AACD,GAFD,MAEK;AACH,WAAOE,OAAP;AACD;AACF,CAVD;;AAaA,MAAME,QAAQ,GAAG,QAAc;AAAA,MAAb;AAAEb,IAAAA;AAAF,GAAa;AAC7Bc,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EAAkB,gBAAlB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAI,SAAQA,IAAI,CAACgB,EAAG,GAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA,kBAAKZ,QAAQ,CAACJ,IAAD;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAG;AAAA,oBAAOD,OAAO,CAACC,IAAD;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,EAAgCU,UAAU,CAACV,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;KAAMa,Q;AAaN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nlet getTime = (note) => {\n  return new Date(note.updated_on).toLocaleDateString()\n}\n\nlet getTitle = (note) => {\n  let title = note.body.split('\\n')[0]\n  if (title.length > 45){\n    return title.slice(0,45)\n  }\n  return title\n}\n\nlet getContent = (note) => {\n  let title = getTitle(note)\n  let content = note.body.replaceAll('\\n', ' ')\n  content = content.replaceAll(title, '')\n\n  if (content.length > 45){\n    return content.slice(0,45) + '...'\n  }else{\n    return content\n  }\n}\n\n\nconst ListItem = ({ note }) => {\n  console.log(note, \"list item wala\")\n  return (\n    <Link to ={`/note/${note.id}/`}>\n      <div className='notes-list-item'>\n        <h3>{getTitle(note)}</h3>\n        <p><span>{getTime(note)}</span>{getContent(note)}</p>\n      </div>\n\n    </Link>\n  );\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}