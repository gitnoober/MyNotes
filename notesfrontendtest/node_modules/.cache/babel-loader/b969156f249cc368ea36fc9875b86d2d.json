{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport ListItem from '../components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  let [notes, setNotes] = useState([]);\n  let {\n    authTokens,\n    logoutUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setNotes(data);\n    } else if (response.statusText === 'Unauthorized') {\n      logoutUser();\n    } else {\n      alert('Something went wrong');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are looged to the home page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"YhoSAe9xZmOz1krr0FdHXhhdQq8=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/pages/HomePage.js"],"names":["React","useState","useEffect","useContext","AuthContext","ListItem","HomePage","notes","setNotes","authTokens","logoutUser","getNotes","response","fetch","method","headers","String","access","data","json","status","statusText","alert","map","note","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI;AAACQ,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA2BP,UAAU,CAACC,WAAD,CAAzC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,QAAQ,GAAG,YAAW;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC7DC,MAAAA,MAAM,EAAC,KADsD;AAE7DC,MAAAA,OAAO,EAAC;AACN,wBAAiB,kBADX;AAEN,yBAAkB,YAAYC,MAAM,CAACP,UAAU,CAACQ,MAAZ;AAF9B;AAFqD,KAArC,CAA1B;AAOA,QAAIC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAjB;;AACA,QAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA4B;AAC1BZ,MAAAA,QAAQ,CAACU,IAAD,CAAR;AACD,KAFD,MAEM,IAAIN,QAAQ,CAACS,UAAT,KAAwB,cAA5B,EAA2C;AAC/CX,MAAAA,UAAU;AACX,KAFK,MAGF;AACFY,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAjBD;;AAoBA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGf,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBACT,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvCD;;GAAMnB,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport AuthContext from '../context/AuthContext';\nimport ListItem from '../components/ListItem';\n\n\nconst HomePage = () => {\n\n  let [notes, setNotes] = useState([])\n  let {authTokens, logoutUser} = useContext(AuthContext)\n\n  useEffect(()=>{\n    getNotes()\n  }, [])\n\n  let getNotes = async() => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/', {\n      method:'GET',\n      headers:{\n        'Content-Type' : 'application/json',\n        'Authorization' : 'Bearer ' + String(authTokens.access)\n      }\n    })\n    let data = await response.json()\n    if (response.status === 200){\n      setNotes(data)  \n    }else if (response.statusText === 'Unauthorized'){\n      logoutUser()\n    }\n    else{\n      alert('Something went wrong')\n    }\n  }\n\n  \n  return (\n    <div>\n        <p>You are looged to the home page</p>\n\n        <div className='notes-list'>\n          {notes.map((note,index) => (\n            <ListItem key={index} note={note}/>\n          ))}\n        </div>\n    </div>);\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}