{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  let {\n    authTokens\n  } = useContext(AuthContext);\n  let noteId = match.params.id;\n  let [note, setNote] = useState([]);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n\n    if (response.status === 200) {\n      let data = await response.json(); // console.log(\"data response\", data, noteId)\n\n      setNote(data);\n      console.log(note);\n    } else if (response.statusText === 'Unauthorized') {\n      alert('Unauthorized User');\n      console.log();\n    } else {\n      console.log(response);\n      alert('Oops something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [note === null || note === void 0 ? void 0 : note.body, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NotePage, \"A0tenAUhWek2R4N1rJqHovBc7RI=\");\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/pages/NotePage.js"],"names":["React","useState","useEffect","useContext","AuthContext","NotePage","match","authTokens","noteId","params","id","note","setNote","getNote","response","fetch","method","headers","String","access","status","data","json","console","log","statusText","alert","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC5B,MAAI;AAACC,IAAAA;AAAD,MAAeJ,UAAU,CAACC,WAAD,CAA7B;AACA,MAAII,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;;AAIA,MAAIK,OAAO,GAAG,YAAW;AACrB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBP,MAAO,GAA1B,EAA8B;AACpDQ,MAAAA,MAAM,EAAC,KAD6C;AAEpDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,YAAYC,MAAM,CAACX,UAAU,CAACY,MAAZ;AAF/B;AAF2C,KAA9B,CAA1B;;AAQA,QAAIL,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA4B;AACxB,UAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB,CADwB,CAExB;;AACAV,MAAAA,OAAO,CAACS,IAAD,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEH,KAND,MAMO,IAAIG,QAAQ,CAACW,UAAT,KAAwB,cAA5B,EAA2C;AAC9CC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAH,MAAAA,OAAO,CAACC,GAAR;AACH,KAHM,MAIH;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAY,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH;AACJ,GAvBD;;AAyBA,sBAAO;AAAA,2BACH;AAAA,iBAAKf,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEgB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArCD;;GAAMtB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\n\nconst NotePage = ({ match }) => {\n    let {authTokens} = useContext(AuthContext)\n    let noteId = match.params.id\n    let [note, setNote] = useState([])\n\n    useEffect(()=>{\n        getNote()\n    }, [noteId])\n\n    let getNote = async ()=> {\n        let response = await fetch(`/api/notes/?pk=${noteId}/`, {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : 'Bearer ' + String(authTokens.access)\n\n            }\n        })\n        if (response.status === 200){\n            let data = await response.json()\n            // console.log(\"data response\", data, noteId)\n            setNote(data)\n            console.log(note)\n            \n        } else if (response.statusText === 'Unauthorized'){\n            alert('Unauthorized User')\n            console.log()\n        }\n        else{\n            console.log(response)\n            alert('Oops something went wrong!')\n        }\n    }\n\n    return <div>\n        <h1>{note?.body} </h1>\n    </div>;\n};\n\nexport default NotePage;\n"]},"metadata":{},"sourceType":"module"}