{"ast":null,"code":"var _jsxFileName = \"/home/ps/Documents/notesfrontendtest/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [authTokens, setauthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n\n  let loginUser = async e => {\n    e.preventDefault(); // console.log('Form submitted')\n\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n\n    if (response.status === 200) {\n      let data = await response.json();\n      setauthTokens(data);\n      setUser(jwt_decode(data.access)); // console.log('data:', data)\n      // console.log(\"response:\" , response);\n    } else {\n      console.log('Alert Something went wrong ://', response);\n    } // console.log('data:', data)\n\n  };\n\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"csEclJaRa6evEYQkUkuBW8nrKQQ=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/ps/Documents/notesfrontendtest/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","jwt_decode","AuthContext","AuthProvider","children","authTokens","setauthTokens","user","setUser","loginUser","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","username","value","password","status","data","json","access","console","log","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,eAAeI,WAAf;AAGA,OAAO,MAAMC,YAAY,GAAE,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEvC,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAI,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAA9B;;AAEA,MAAIU,SAAS,GAAG,MAAOC,CAAP,IAAa;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC3DC,MAAAA,MAAM,EAAG,MADkD;AAE3DC,MAAAA,OAAO,EAAG;AACN,wBAAe;AADT,OAFiD;AAK3DC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,oBAAWR,CAAC,CAACS,MAAF,CAASC,QAAT,CAAkBC,KAA9B;AAAqC,oBAAWX,CAAC,CAACS,MAAF,CAASG,QAAT,CAAkBD;AAAlE,OAAf;AALoD,KAArC,CAA1B;;AAQA,QAAIT,QAAQ,CAACW,MAAT,KAAkB,GAAtB,EAA0B;AACtB,UAAIC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAjB;AACAnB,MAAAA,aAAa,CAACkB,IAAD,CAAb;AACAhB,MAAAA,OAAO,CAACP,UAAU,CAACuB,IAAI,CAACE,MAAN,CAAX,CAAP,CAHsB,CAItB;AACA;AACH,KAND,MAMO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6ChB,QAA7C;AACH,KAnBwB,CAoBzB;;AACH,GArBD;;AAuBA,MAAIiB,WAAW,GAAG;AACdpB,IAAAA,SAAS,EAACA;AADI,GAAlB;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEoB,WAA7B;AAAA,cACKzB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n\nexport const AuthProvider =({children}) => {\n\n    let [authTokens, setauthTokens] = useState(null)\n    let [user, setUser] = useState(null)\n\n    let loginUser = async (e) => {\n        e.preventDefault()\n        // console.log('Form submitted')\n        let response = await fetch('http://127.0.0.1:8000/api/token/', {\n            method : 'POST',\n            headers : {\n                'Content-Type':'application/json'\n            },\n            body : JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n\n        })\n        if (response.status===200){\n            let data = await response.json()\n            setauthTokens(data)\n            setUser(jwt_decode(data.access))\n            // console.log('data:', data)\n            // console.log(\"response:\" , response);\n        } else {\n            console.log('Alert Something went wrong ://',response)\n        }\n        // console.log('data:', data)\n    }\n\n    let contextData = {\n        loginUser:loginUser\n    }\n\n    return (\n        <AuthContext.Provider value={contextData} >\n            {children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}